<?php

namespace Tests\Feature;

use App\Models\Organization;
use App\Models\User;
use Database\Seeders\PermissionSeeder;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Tests\TestCase;

class OrganizationNoteTest extends TestCase
{
    use RefreshDatabase;

    private User $adminUser;
    private User $agentUser;
    private User $managerUser;
    private User $standardUser;

    private Organization $organization;

    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->seed(PermissionSeeder::class);

        $this->adminUser = User::factory()->withPersonalTeam()->create()->assignRole([
            'admin', 'agent', 'user', 'restricted user'
        ]);
        $this->managerUser = User::factory()->withPersonalTeam()->create()->assignRole([
            'manager', 'user', 'restricted user'
        ]);
        $this->agentUser = User::factory()->withPersonalTeam()->create()->assignRole([
            'agent', 'manager', 'user', 'restricted user'
        ]);
        $this->standardUser = User::factory()->withPersonalTeam()->create()->assignRole([
            'user', 'restricted user'
        ]);

        $this->organization = Organization::factory()->create();
    }


    public function test_agent_can_create_organization_note()
    {
        $this->actingAs($this->agentUser);

        $response = $this->post('/notes', [
            'noteable_type' => 'organization',
            'noteable_id'   => $this->organization->id,
            'content'       => 'some content'
        ]);

        $this->assertDatabaseHas('notes', [
            'content' => 'some content',
            'noteable_type' => 'organization',
            'noteable_id' => (string) $this->organization->id
        ]);
    }

//    public function test_agent_can_favorite_an_organization_note()
//    {
//        $this->actingAs($this->agentUser);
//    }
}
